[33mcommit 74804390bd8119510c098479de6998131cf49cbb[m
Author: abolfazl rezaei <abolfazlrezaei.v@gmail.com>
Date:   Wed Sep 16 21:57:35 2020 +0430

    initial commit

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/alamout/__init__.py b/alamout/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/alamout/__pycache__/__init__.cpython-38.pyc b/alamout/__pycache__/__init__.cpython-38.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..bfc16a4[m
Binary files /dev/null and b/alamout/__pycache__/__init__.cpython-38.pyc differ
[1mdiff --git a/alamout/__pycache__/settings.cpython-38.pyc b/alamout/__pycache__/settings.cpython-38.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..3dccd4e[m
Binary files /dev/null and b/alamout/__pycache__/settings.cpython-38.pyc differ
[1mdiff --git a/alamout/__pycache__/urls.cpython-38.pyc b/alamout/__pycache__/urls.cpython-38.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..7354635[m
Binary files /dev/null and b/alamout/__pycache__/urls.cpython-38.pyc differ
[1mdiff --git a/alamout/__pycache__/wsgi.cpython-38.pyc b/alamout/__pycache__/wsgi.cpython-38.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..38ced92[m
Binary files /dev/null and b/alamout/__pycache__/wsgi.cpython-38.pyc differ
[1mdiff --git a/alamout/asgi.py b/alamout/asgi.py[m
[1mnew file mode 100644[m
[1mindex 0000000..6f5da41[m
[1m--- /dev/null[m
[1m+++ b/alamout/asgi.py[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m"""[m
[32m+[m[32mASGI config for alamout project.[m
[32m+[m
[32m+[m[32mIt exposes the ASGI callable as a module-level variable named ``application``.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/3.1/howto/deployment/asgi/[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mimport os[m
[32m+[m
[32m+[m[32mfrom django.core.asgi import get_asgi_application[m
[32m+[m
[32m+[m[32mos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'alamout.settings')[m
[32m+[m
[32m+[m[32mapplication = get_asgi_application()[m
[1mdiff --git a/alamout/settings.py b/alamout/settings.py[m
[1mnew file mode 100644[m
[1mindex 0000000..49c8b7d[m
[1m--- /dev/null[m
[1m+++ b/alamout/settings.py[m
[36m@@ -0,0 +1,142 @@[m
[32m+[m[32m"""[m
[32m+[m[32mDjango settings for alamout project.[m
[32m+[m
[32m+[m[32mGenerated by 'django-admin startproject' using Django 3.1.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/3.1/topics/settings/[m
[32m+[m
[32m+[m[32mFor the full list of settings and their values, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/3.1/ref/settings/[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mfrom pathlib import Path[m
[32m+[m[32mimport os[m
[32m+[m
[32m+[m[32m# Build paths inside the project like this: BASE_DIR / 'subdir'.[m
[32m+[m[32mBASE_DIR = Path(__file__).resolve(strict=True).parent.parent[m
[32m+[m
[32m+[m
[32m+[m[32m# Quick-start development settings - unsuitable for production[m
[32m+[m[32m# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/[m
[32m+[m
[32m+[m[32m# SECURITY WARNING: keep the secret key used in production secret![m
[32m+[m[32mSECRET_KEY = 'at-x_-l61e_w&j)9+xp+!-spwb&m+5k1$)#-u3bh6c1+b&tzzy'[m
[32m+[m
[32m+[m[32m# SECURITY WARNING: don't run with debug turned on in production![m
[32m+[m[32mDEBUG = True[m
[32m+[m
[32m+[m[32mALLOWED_HOSTS = [][m
[32m+[m
[32m+[m
[32m+[m[32m# Application definition[m
[32m+[m
[32m+[m[32mINSTALLED_APPS = [[m
[32m+[m[32m    'blog',[m
[32m+[m[32m    'users',[m
[32m+[m[32m    'django.contrib.admin',[m
[32m+[m[32m    'django.contrib.auth',[m
[32m+[m[32m    'django.contrib.contenttypes',[m
[32m+[m[32m    'django.contrib.sessions',[m
[32m+[m[32m    'django.contrib.messages',[m
[32m+[m[32m    'django.contrib.staticfiles',[m
[32m+[m[32m    'crispy_forms',[m
[32m+[m[32m    'django.contrib.sitemaps',[m
[32m+[m[32m    'taggit',[m
[32m+[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32mMIDDLEWARE = [[m
[32m+[m[32m    'django.middleware.security.SecurityMiddleware',[m
[32m+[m[32m    'django.contrib.sessions.middleware.SessionMiddleware',[m
[32m+[m[32m    'django.middleware.common.CommonMiddleware',[m
[32m+[m[32m    'django.middleware.csrf.CsrfViewMiddleware',[m
[32m+[m[32m    'django.contrib.auth.middleware.AuthenticationMiddleware',[m
[32m+[m[32m    'django.contrib.messages.middleware.MessageMiddleware',[m
[32m+[m[32m    'django.middleware.clickjacking.XFrameOptionsMiddleware',[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32mROOT_URLCONF = 'alamout.urls'[m
[32m+[m
[32m+[m[32mTEMPLATES = [[m
[32m+[m[32m    {[m
[32m+[m[32m        'BACKEND': 'django.template.backends.django.DjangoTemplates',[m
[32m+[m
[32m+[m[32m        'DIRS': [os.path.join(BASE_DIR, 'templates')],[m
[32m+[m[32m        'APP_DIRS': True,[m
[32m+[m[32m        'OPTIONS': {[m
[32m+[m[32m            'context_processors': [[m
[32m+[m[32m                'django.template.context_processors.debug',[m
[32m+[m[32m                'django.template.context_processors.request',[m
[32m+[m[32m                'django.contrib.auth.context_processors.auth',[m
[32m+[m[32m                'django.contrib.messages.context_processors.messages',[m
[32m+[m[32m            ],[m
[32m+[m[32m        },[m
[32m+[m[32m    },[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32mWSGI_APPLICATION = 'alamout.wsgi.application'[m
[32m+[m
[32m+[m
[32m+[m[32m# Database[m
[32m+[m[32m# https://docs.djangoproject.com/en/3.1/ref/settings/#databases[m
[32m+[m
[32m+[m[32mDATABASES = {[m
[32m+[m[32m    'default': {[m
[32m+[m[32m        'ENGINE': 'django.db.backends.postgresql',[m
[32m+[m[32m        'NAME': 'Demo',[m
[32m+[m[32m        'USER':'postgres',[m
[32m+[m[32m        'PASSWORD':'26432643',[m
[32m+[m[32m        'HOST':'localhost',[m
[32m+[m[32m        'PORT':'5432',[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m# Password validation[m
[32m+[m[32m# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators[m
[32m+[m
[32m+[m[32mAUTH_PASSWORD_VALIDATORS = [[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m][m
[32m+[m
[32m+[m
[32m+[m[32m# Internationalization[m
[32m+[m[32m# https://docs.djangoproject.com/en/3.1/topics/i18n/[m
[32m+[m
[32m+[m[32mLANGUAGE_CODE = 'en-us'[m
[32m+[m
[32m+[m[32mTIME_ZONE = 'UTC'[m
[32m+[m
[32m+[m[32mUSE_I18N = True[m
[32m+[m
[32m+[m[32mUSE_L10N = True[m
[32m+[m
[32m+[m[32mUSE_TZ = True[m
[32m+[m
[32m+[m
[32m+[m[32m# Static files (CSS, JavaScript, Images)[m
[32m+[m[32m# https://docs.djangoproject.com/en/3.1/howto/static-files/[m
[32m+[m
[32m+[m[32mSTATIC_URL = '/static/'[m
[32m+[m[32mSTATICFILES_DIRS = [[m
[32m+[m[32m    os.path.join(BASE_DIR, 'static'),[m
[32m+[m[32m][m
[32m+[m[32m# Base url to serve media files[m
[32m+[m[32mMEDIA_URL = '/media/'[m
[32m+[m[32m# Path where media is stored[m
[32m+[m[32mMEDIA_ROOT = os.path.join(BASE_DIR, 'media/')[m
[32m+[m[32mLOGIN_Url = '/login'[m
[32m+[m[32mLOGIN_REDIRECT_URL = '/'[m
[32m+[m[32mCRISPY_TEMPLATE_PACK = 'bootstrap4'[m
\ No newline at end of file[m
[1mdiff --git a/alamout/urls.py b/alamout/urls.py[m
[1mnew file mode 100644[m
[1mindex 0000000..adaaebc[m
[1m--- /dev/null[m
[1m+++ b/alamout/urls.py[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m"""alamout URL Configuration[m
[32m+[m
[32m+[m[32mThe `urlpatterns` list routes URLs to views. For more information please see:[m
[32m+[m[32m    https://docs.djangoproject.com/en/3.1/topics/http/urls/[m
[32m+[m[32mExamples:[m
[32m+[m[32mFunction views[m
[32m+[m[32m    1. Add an import:  from my_app import views[m
[32m+[m[32m    2. Add a URL to urlpatterns:  path('', views.home, name='home')[m
[32m+[m[32mClass-based views[m
[32m+[m[32m    1. Add an import:  from other_app.views import Home[m
[32m+[m[32m    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')[m
[32m+[m[32mIncluding another URLconf[m
[32m+[m[32m    1. Import the include() function: from django.urls import include, path[m
[32m+[m[32m    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))[m
[32m+[m[32m"""[m
[32m+[m[32mfrom django.contrib import admin[m
[32m+[m[32mfrom django.urls import path,include[m
[32m+[m[32mfrom django.conf.urls.static import static[m
[32m+[m[32mfrom django.conf import settings[m
[32m+[m
[32m+[m[32murlpatterns = [[m
[32m+[m
[32m+[m[32m    path('admin/', admin.site.urls),[m
[32m+[m[32m    path('', include('blog.urls')),[m
[32m+[m[32m    path('user/', include('users.urls')),[m
[32m+[m[41m    [m
[32m+[m[32m]+ static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)[m
[32m+[m
[1mdiff --git a/alamout/wsgi.py b/alamout/wsgi.py[m
[1mnew file mode 100644[m
[1mindex 0000000..b168e75[m
[1m--- /dev/null[m
[1m+++ b/alamout/wsgi.py[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m"""[m
[32m+[m[32mWSGI config for alamout project.[m
[32m+[m
[32m+[m[32mIt exposes the WSGI callable as a module-level variable named ``application``.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/3.1/howto/deployment/wsgi/[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mimport os[m
[32m+[m
[32m+[m[32mfrom django.core.wsgi import get_wsgi_application[m
[32m+[m
[32m+[m[32mos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'alamout.settings')[m
[32m+[m
[32m+[m[32mapplication = get_wsgi_application()[m
[1mdiff --git a/blog/__init__.py b/blog/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/blog/__pycache__/__init__.cpython-38.pyc b/blog/__pycache__/__init__.cpython-38.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..a733b61[m
Binary files /dev/null and b/blog/__pycache__/__init__.cpython-38.pyc differ
[1mdiff --git a/blog/__pycache__/admin.cpython-38.pyc b/blog/__pycache__/admin.cpython-38.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..fd64704[m
Binary files /dev/null and b/blog/__pycache__/admin.cpython-38.pyc differ
[1mdiff --git a/blog/__pycache__/form.cpython-38.pyc b/blog/__pycache__/form.cpython-38.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..2f98533[m
Binary files /dev/null and b/blog/__pycache__/form.cpython-38.pyc differ
[1mdiff --git a/blog/__pycache__/models.cpython-38.pyc b/blog/__pycache__/models.cpython-38.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..45e20fd[m
Binary files /dev/null and b/blog/__pycache__/models.cpython-38.pyc differ
[1mdiff --git a/blog/__pycache__/urls.cpython-38.pyc b/blog/__pycache__/urls.cpython-38.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..d29cd37[m
Binary files /dev/null and b/blog/__pycache__/urls.cpython-38.pyc differ
[1mdiff --git a/blog/__pycache__/views.cpython-38.pyc b/blog/__pycache__/views.cpython-38.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..6944c30[m
Binary files /dev/null and b/blog/__pycache__/views.cpython-38.pyc differ
[1mdiff --git a/blog/admin.py b/blog/admin.py[m
[1mnew file mode 100644[m
[1mindex 0000000..9702db6[m
[1m--- /dev/null[m
[1m+++ b/blog/admin.py[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32mfrom django.contrib import admin[m
[32m+[m[32mfrom .models import Post,Comment[m
[32m+[m
[32m+[m[32madmin.site.register(Post)[m
[32m+[m[32madmin.site.register(Comment)[m
[32m+[m
[32m+[m[41m    [m
[1mdiff --git a/blog/apps.py b/blog/apps.py[m
[1mnew file mode 100644[m
[1mindex 0000000..7930587[m
[1m--- /dev/null[m
[1m+++ b/blog/apps.py[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32mfrom django.apps import AppConfig[m
[32m+[m
[32m+[m
[32m+[m[32mclass BlogConfig(AppConfig):[m
[32m+[m[32m    name = 'blog'[m
[1mdiff --git a/blog/form.py b/blog/form.py[m
[1mnew file mode 100644[m
[1mindex 0000000..33d9afe[m
[1m--- /dev/null[m
[1m+++ b/blog/form.py[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mfrom django import forms[m
[32m+[m[32mfrom .models import Post,Comment[m
[32m+[m[32mfrom django.db import models[m
[32m+[m
[32m+[m
[32m+[m[32mclass commentform(forms.ModelForm):[m
[32m+[m
[32m+[m[32m    class Meta:[m
[32m+[m[32m        model = Comment[m[41m      [m
[32m+[m[32m        fields = ('author','massage')[m[41m   [m
[32m+[m[32m        widgets = {'author': forms.HiddenInput()}[m
[32m+[m[41m        [m
[32m+[m
[1mdiff --git a/blog/migrations/0001_initial.py b/blog/migrations/0001_initial.py[m
[1mnew file mode 100644[m
[1mindex 0000000..165eef7[m
[1m--- /dev/null[m
[1m+++ b/blog/migrations/0001_initial.py[m
[36m@@ -0,0 +1,43 @@[m
[32m+[m[32m# Generated by Django 3.1 on 2020-08-31 20:52[m
[32m+[m
[32m+[m[32mfrom django.conf import settings[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m[32mimport django.db.models.deletion[m
[32m+[m[32mimport django.utils.timezone[m
[32m+[m[32mimport taggit.managers[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    initial = True[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('taggit', '0003_taggeditem_add_unique_index'),[m
[32m+[m[32m        migrations.swappable_dependency(settings.AUTH_USER_MODEL),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Post',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('title', models.CharField(max_length=200)),[m
[32m+[m[32m                ('article', models.TextField()),[m
[32m+[m[32m                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),[m
[32m+[m[32m                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),[m
[32m+[m[32m                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),[m
[32m+[m[32m            ],[m
[32m+[m[32m            options={[m
[32m+[m[32m                'ordering': ['-pub_date'],[m
[32m+[m[32m            },[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Comment',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('author', models.CharField(blank=True, max_length=200)),[m
[32m+[m[32m                ('massage', models.TextField()),[m
[32m+[m[32m                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.post')),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/blog/migrations/0002_auto_20200916_1729.py b/blog/migrations/0002_auto_20200916_1729.py[m
[1mnew file mode 100644[m
[1mindex 0000000..15e7b00[m
[1m--- /dev/null[m
[1m+++ b/blog/migrations/0002_auto_20200916_1729.py[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32m# Generated by Django 3.1 on 2020-09-16 12:59[m
[32m+[m
[32m+[m[32mfrom django.conf import settings[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m[32mimport django.db.models.deletion[m
[32m+[m[32mimport django.utils.timezone[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        migrations.swappable_dependency(settings.AUTH_USER_MODEL),[m
[32m+[m[32m        ('blog', '0001_initial'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.AlterField([m
[32m+[m[32m            model_name='post',[m
[32m+[m[32m            name='article',[m
[32m+[m[32m            field=models.TextField(verbose_name='متن'),[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.AlterField([m
[32m+[m[32m            model_name='post',[m
[32m+[m[32m            name='author',[m
[32m+[m[32m            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='نویسنده'),[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.AlterField([m
[32m+[m[32m            model_name='post',[m
[32m+[m[32m            name='pub_date',[m
[32m+[m[32m            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='تاریخ'),[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.AlterField([m
[32m+[m[32m            model_name='post',[m
[32m+[m[32m            name='title',[m
[32m+[m[32m            field=models.CharField(max_length=200, verbose_name='عنوان'),[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/blog/migrations/__init__.py b/blog/migrations/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/blog/migrations/__pycache__/0001_initial.cpython-38.pyc b/blog/migrations/__pycache__/0001_initial.cpython-38.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..877bbbb[m
Binary files /dev/null and b/blog/migrations/__pycache__/0001_initial.cpython-38.pyc differ
[1mdiff --git a/blog/migrations/__pycache__/0002_auto_20200916_1729.cpython-38.pyc b/blog/migrations/__pycache__/0002_auto_20200916_1729.cpython-38.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..808aace[m
Binary files /dev/null and b/blog/migrations/__pycache__/0002_auto_20200916_1729.cpython-38.pyc differ
[1mdiff --git a/blog/migrations/__pycache__/__init__.cpython-38.pyc b/blog/migrations/__pycache__/__init__.cpython-38.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..60fa9e3[m
Binary files /dev/null and b/blog/migrations/__pycache__/__init__.cpython-38.pyc differ
[1mdiff --git a/blog/models.py b/blog/models.py[m
[1mnew file mode 100644[m
[1mindex 0000000..6c5246a[m
[1m--- /dev/null[m
[1m+++ b/blog/models.py[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32mfrom django.db import models[m
[32m+[m[32mfrom django.contrib.auth.models import User[m
[32m+[m[32mfrom django.utils import timezone[m
[32m+[m[32mfrom taggit.managers import TaggableManager[m
[32m+[m[41m [m
[32m+[m
[32m+[m[32mclass Post(models.Model):[m
[32m+[m[32m    title = models.CharField(max_length=200,verbose_name = 'عنوان')[m
[32m+[m[32m    article = models.TextField(verbose_name = 'متن')[m
[32m+[m[32m    author = models.ForeignKey(User, on_delete=models.CASCADE,verbose_name = 'نویسنده')[m[41m  [m
[32m+[m[32m    pub_date = models.DateTimeField(default=timezone.now, verbose_name = 'تاریخ')[m[41m [m
[32m+[m[32m    tags = TaggableManager()[m
[32m+[m[32m    def __str__(self):[m
[32m+[m[32m        return self.title[m
[32m+[m[32m    class Meta:[m
[32m+[m[32m        ordering = ['-pub_date'][m
[32m+[m
[32m+[m
[32m+[m[32mclass Comment(models.Model):[m
[32m+[m[32m    post = models.ForeignKey(Post, related_name='comments', on_delete=models.CASCADE)[m
[32m+[m[32m    author =  models.CharField(max_length=200,blank =True)[m
[32m+[m[32m    massage = models.TextField()[m
[32m+[m[32m    def __str__(self):[m
[32m+[m[32m        return self.massage[m
[32m+[m
[1mdiff --git a/blog/templates/blog/about.html b/blog/templates/blog/about.html[m
[1mnew file mode 100644[m
[1mindex 0000000..2cd6b17[m
[1m--- /dev/null[m
[1m+++ b/blog/templates/blog/about.html[m
[36m@@ -0,0 +1,65 @@[m
[32m+[m[32m{% extends "blog/base.html" %}[m
[32m+[m[32m{% block content %}[m
[32m+[m[32m<style>[m
[32m+[m[32m.paddingTB60 {padding:60px 0px 60px 0px;}[m
[32m+[m[32m.gray-bg {background: #F1F1F1 !important;}[m
[32m+[m[32m.about-title {}[m
[32m+[m[32m.about-title h1 {color: #535353; font-size:45px;font-weight:600;}[m
[32m+[m[32m.about-title span {color: #AF0808; font-size:45px;font-weight:700;}[m
[32m+[m[32m.about-title h3 {color: #535353; font-size:23px;margin-bottom:24px;}[m
[32m+[m[32m.about-title p {color: #7a7a7a;line-height: 1.8;margin: 0 0 15px;}[m
[32m+[m[32m.about-paddingB {padding-bottom: 12px;}[m
[32m+[m[32m.about-img {padding-left: 57px;}[m
[32m+[m
[32m+[m[32m/* Social Icons */[m
[32m+[m[32m.about-icons {margin:48px 0px 48px 0px ;}[m
[32m+[m[32m.about-icons i{margin-right: 10px;padding: 0px; font-size:35px;color:#323232;box-shadow: 0 0 3px rgba(0, 0, 0, .2);}[m
[32m+[m[32m.about-icons li {margin:0px;padding:0;display:inline-block;}[m
[32m+[m[32m#social-fb:hover {color: #3B5998;transition:all .001s;}[m
[32m+[m[32m #social-tw:hover {color: #4099FF;transition:all .001s;}[m
[32m+[m[32m #social-gp:hover {color: #d34836;transition:all .001s;}[m
[32m+[m[32m #social-em:hover {color: #f39c12;transition:all .001s;}[m
[32m+[m[32m</style>[m
[32m+[m[32m<script src="//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js"></script>[m
[32m+[m[32m<script src="//code.jquery.com/jquery-1.11.1.min.js"></script>[m
[32m+[m[32m<!------ Include the above in your HEAD tag ---------->[m
[32m+[m
[32m+[m[32m<link href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet">[m
[32m+[m[32m<div class="about-section paddingTB60 gray-bg">[m
[32m+[m[32m                <div class="container">[m
[32m+[m[32m                    <div class="row">[m
[32m+[m						[32m<div class="col-md-7 col-sm-6">[m
[32m+[m							[32m<div class="about-title clearfix">[m
[32m+[m								[32m<h1>About <span>US</span></h1>[m
[32m+[m								[32m<h3>Django (web framework) </h3>[m
[32m+[m								[32m<p class="about-paddingB">Django was created in the fall of 2003, when the web programmers at the Lawrence Journal-World newspaper, Adrian Holovaty and Simon Willison, began using Python to build applications. Jacob Kaplan-Moss was hired early in Django's development shortly before Simon Willison's internship ended.[15] It was released publicly under a BSD license in July 2005. The framework was named after guitarist Django Reinhardt.[16][m
[32m+[m
[32m+[m[32mIn June 2008, it was announced that a newly formed Django Software Foundation (DSF) would maintain Django in the future. </p>[m
[32m+[m								[32m<p>Django's primary goal is to ease the creation of complex, database-driven websites. The framework emphasizes reusability and "pluggability" of components, less code, low coupling, rapid development, and the principle of don't repeat yourself.[7] Python is used throughout, even for settings files and data models. Django also provides an optional administrative create, read, update and delete interface that is generated dynamically through introspection and configured via admin models.</p>[m
[32m+[m						[32m<div class="about-icons">[m[41m [m
[32m+[m[32m                            <ul >[m
[32m+[m[32m                                <li><a href="https://www.facebook.com/"><i id="social-fb" class="fa fa-facebook-square fa-3x social"></i></a> </li>[m
[32m+[m[32m                                <li><a href="https://twitter.com/"><i id="social-tw" class="fa fa-twitter-square fa-3x social"></i></a> </li>[m
[32m+[m[32m                                <li> <a href="https://plus.google.com/"><i id="social-gp" class="fa fa-google-plus-square fa-3x social"></i></a> </li>[m
[32m+[m[32m                                <li> <a href="mailto:bootsnipp@gmail.com"><i id="social-em" class="fa fa-envelope-square fa-3x social"></i></a> </li>[m
[32m+[m[32m                            </ul>[m[41m       [m
[32m+[m[41m               [m
[32m+[m[41m               [m
[32m+[m[41m	           [m
[32m+[m[41m	           [m
[32m+[m[41m	        [m
[32m+[m	[32m        </div>[m
[32m+[m							[32m</div>[m
[32m+[m						[32m</div>[m
[32m+[m						[32m<div class="col-md-5 col-sm-6">[m
[32m+[m							[32m<div class="about-img">[m
[32m+[m								[32m<img src="https://devitems.com/preview/appmom/img/mobile/2.png" alt="">[m
[32m+[m							[32m</div>[m
[32m+[m						[32m</div>[m[41m	[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[32m            </div>[m
[32m+[m
[32m+[m
[32m+[m[32m{% endblock content %}[m
[32m+[m
[1mdiff --git a/blog/templates/blog/base.html b/blog/templates/blog/base.html[m
[1mnew file mode 100644[m
[1mindex 0000000..2bdca3d[m
[1m--- /dev/null[m
[1m+++ b/blog/templates/blog/base.html[m
[36m@@ -0,0 +1,98 @@[m
[32m+[m[32m{% load static %}[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html lang="en">[m
[32m+[m
[32m+[m[32m<head>[m
[32m+[m
[32m+[m[32m  <meta charset="utf-8">[m
[32m+[m[32m  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">[m
[32m+[m[32m  <meta name="description" content="">[m
[32m+[m[32m  <meta name="author" content="">[m
[32m+[m
[32m+[m[32m  <title>My Resume</title>[m
[32m+[m
[32m+[m[32m  <!-- Bootstrap core CSS -->[m
[32m+[m[32m  <link href="{% static  'vendor/bootstrap/css/bootstrap.min.css' %}" rel="stylesheet">[m
[32m+[m
[32m+[m[32m  <!-- Custom styles for this template -->[m
[32m+[m[32m  <link href="{% static 'css/simple-sidebar.css' %}" rel="stylesheet">[m
[32m+[m
[32m+[m[32m</head>[m
[32m+[m
[32m+[m[32m<body>[m
[32m+[m
[32m+[m[32m  <div class="d-flex" id="wrapper">[m
[32m+[m
[32m+[m[32m    <!-- Sidebar -->[m
[32m+[m[32m    <div class="bg-light border-right" id="sidebar-wrapper">[m
[32m+[m[32m      <div class="sidebar-heading">Resume </div>[m
[32m+[m[32m      <div class="list-group list-group-flush">[m
[32m+[m[32m        <a href="{% url 'post_list' %}" class="list-group-item list-group-item-action bg-light">Post Lists</a>[m
[32m+[m[41m        [m
[32m+[m[32m        <a href="{% url 'post_create' %}" class="list-group-item list-group-item-action bg-light">New Post</a>[m
[32m+[m
[32m+[m
[32m+[m[32m        <a href="{% url 'about' %}" class="list-group-item list-group-item-action bg-light">About</a>[m
[32m+[m[32m      </div>[m
[32m+[m[32m    </div>[m
[32m+[m[32m    <!-- /#sidebar-wrapper -->[m
[32m+[m
[32m+[m[32m    <!-- Page Content -->[m
[32m+[m[32m    <div id="page-content-wrapper">[m
[32m+[m
[32m+[m[32m      <nav class="navbar navbar-expand-lg navbar-light bg-light border-bottom">[m
[32m+[m
[32m+[m[32m        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">[m
[32m+[m[32m          <span class="navbar-toggler-icon"></span>[m
[32m+[m[32m        </button>[m
[32m+[m
[32m+[m[32m        <div class="collapse navbar-collapse" id="navbarSupportedContent">[m
[32m+[m[32m          <ul class="navbar-nav ml-auto mt-2 mt-lg-0">[m
[32m+[m[41m            [m
[32m+[m[32m            <li class="nav-item dropdown">[m
[32m+[m[32m              <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">[m
[32m+[m[32m                Users things[m
[32m+[m[32m              </a>[m
[32m+[m[32m              <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdown">[m
[32m+[m[41m                [m
[32m+[m[32m                {% if user.is_authenticated %}[m
[32m+[m[32m                  <a class="dropdown-item" href="{% url 'logout' %}">SignOut</a>[m
[32m+[m[32m                {% else %}[m[41m [m
[32m+[m[32m                  <a class="dropdown-item" href="{% url 'login' %}">SignIn</a>[m
[32m+[m[41m                [m
[32m+[m[41m                [m
[32m+[m[32m                  <div class="dropdown-divider"></div>[m
[32m+[m[32m                    <a class="dropdown-item" href="{% url 'usercreation' %}">SignUp</a>[m
[32m+[m[32m                  </div>[m[41m [m
[32m+[m[32m                {% endif %}[m
[32m+[m[41m                  [m
[32m+[m
[32m+[m[32m            </li>[m
[32m+[m[32m          </ul>[m
[32m+[m[32m        </div>[m
[32m+[m[32m      </nav>[m
[32m+[m
[32m+[m[32m      {% block content %}[m
[32m+[m[41m        [m
[32m+[m[32m      {% endblock content %}[m
[32m+[m[32m    </div>[m
[32m+[m[32m    <!-- /#page-content-wrapper -->[m
[32m+[m
[32m+[m[32m  </div>[m
[32m+[m[32m  <!-- /#wrapper -->[m
[32m+[m
[32m+[m[32m  <!-- Bootstrap core JavaScript -->[m
[32m+[m[32m  <script src="{% static 'vendor/jquery/jquery.min.js' %}"></script>[m
[32m+[m[32m  <script src="{% static 'vendor/bootstrap/js/bootstrap.bundle.min.js' %}"></script>[m
[32m+[m
[32m+[m[32m  <!-- Menu Toggle Script -->[m
[32m+[m[32m  <script>[m
[32m+[m[32m    $("#menu-toggle").click(function(e) {[m
[32m+[m[32m      e.preventDefault();[m
[32m+[m[32m      $("#wrapper").toggleClass("toggled");[m
[32m+[m[32m    });[m
[32m+[m[32m  </script>[m
[32m+[m
[32m+[m[32m</body>[m
[32m+[m
[32m+[m[32m</html>[m
[1mdiff --git a/blog/templates/blog/post_comment.html b/blog/templates/blog/post_comment.html[m
[1mnew file mode 100644[m
[1mindex 0000000..3b2449b[m
[1m--- /dev/null[m
[1m+++ b/blog/templates/blog/post_comment.html[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m{% extends "blog/base.html" %}[m
[32m+[m
[32m+[m[32m{% block content %}[m
[32m+[m[32m    {% for posts in  Post %}[m
[32m+[m[32m      {{posts.title}} <br>[m
[32m+[m[32m      {{posts.article}} <br>[m
[32m+[m[41m      [m
[32m+[m[32m          {% for comment in posts.comments.all %}[m
[32m+[m[32m           ## {{comment.author}} <br>[m
[32m+[m[32m            {{comment.massage}} <br>[m[41m [m
[32m+[m[32m          {% endfor %}[m
[32m+[m[32m    ----------------------------------------------------------------- <br>[m[41m [m
[32m+[m[32m    <br>[m[41m          [m
[32m+[m[32m    {% endfor %}[m
[32m+[m
[32m+[m[32m{% endblock %}[m
\ No newline at end of file[m
[1mdiff --git a/blog/templates/blog/post_create.html b/blog/templates/blog/post_create.html[m
[1mnew file mode 100644[m
[1mindex 0000000..d6149c1[m
[1m--- /dev/null[m
[1m+++ b/blog/templates/blog/post_create.html[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32m{% extends 'blog/base.html' %}[m
[32m+[m[32m{% load crispy_forms_tags %}[m
[32m+[m[32m{% block content %}[m
[32m+[m
[32m+[m[32m    <div class='container'>[m
[32m+[m[32m        <div class="row justify-content-center align-items-center logo">[m
[32m+[m[32m            <div class="content-section col-sm-4       text-lg-right  ">[m
[32m+[m[32m                <form method="POST">[m
[32m+[m[32m                    {% csrf_token %}[m
[32m+[m[32m                    <fieldset class="form-group">[m
[32m+[m[32m                        <legend class="border-bottom mb-4 text-lg-right">پست جدید</legend>[m
[32m+[m[32m                        {{ form|crispy }}[m
[32m+[m[32m                    </fieldset>[m
[32m+[m[32m                    <div class="form-group">[m
[32m+[m[32m                        <button class="btn btn-outline-info" type="submit">پست</button>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </form>[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m    </div>[m[41m           [m
[32m+[m[32m{% endblock %}[m
[1mdiff --git a/blog/templates/blog/post_detail.html b/blog/templates/blog/post_detail.html[m
[1mnew file mode 100644[m
[1mindex 0000000..035d680[m
[1m--- /dev/null[m
[1m+++ b/blog/templates/blog/post_detail.html[m
[36m@@ -0,0 +1,63 @@[m
[32m+[m[32m{% extends "blog/base.html" %}[m
[32m+[m[32m{% load crispy_forms_tags %}[m
[32m+[m[32m{% block content %}[m
[32m+[m
[32m+[m[32m<div class="container">[m
[32m+[m[32m  <div class="row">[m
[32m+[m[32m    <div class="col-md-8 card mb-4  mt-3 left  top">[m
[32m+[m[32m      <div class="card-body">[m
[32m+[m[32m        <h1> {{ post.title }} </h1>[m
[32m+[m[32m        <p class=" text-muted">{{ post.author }} | {{ post.pub_date }}[m[41m  [m
[32m+[m[32m          <br> <a href="{% url 'post_update' post.id %}"><button class="btn btn-primary" type="button">update</button></a>[m[41m [m
[32m+[m[32m              <form method="POST" action="{% url 'post_delete' post.id %}">[m
[32m+[m[32m                  {% csrf_token %}[m
[32m+[m[32m                  <button class="btn btn-danger" type="confim">Delete</button>[m
[32m+[m[32m              </form>[m[41m [m
[32m+[m
[32m+[m[32m          </p>[m
[32m+[m[32m        <p class="card-text ">{{ post.article | safe }}</p>[m
[32m+[m[32m        <br>[m
[32m+[m[32m        <br>[m
[32m+[m[41m        [m
[32m+[m[32m       Tags : {{post.tags.all|join:","}}[m
[32m+[m[32m      </div>[m
[32m+[m[32m    </div>[m
[32m+[m[32m    {% block sidebar %} {% include 'blog/sidebar.html' %} {% endblock sidebar %}[m
[32m+[m[41m [m
[32m+[m
[32m+[m
[32m+[m[32m        <div class="col-md-8 card mb-4  mt-3 left  top ">[m
[32m+[m[32m          <div class="card-body">[m
[32m+[m[32m            <!-- comments -->[m
[32m+[m[32m            <h2>{{ comments.count }} پیام</h2>[m
[32m+[m[32m            {% for comment in  comments %}[m
[32m+[m[32m            <div class="comments" style="padding: 10px;">[m
[32m+[m[32m              <p class="font-weight-bold">[m
[32m+[m[41m                [m
[32m+[m[32m                  {{ comment.author }}[m
[32m+[m[32m              </p>[m
[32m+[m[32m              {{ comment.massage | linebreaks }}[m
[32m+[m[32m            </div>[m
[32m+[m[32m            {% endfor %}[m
[32m+[m[32m          </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <div class="col-md-8 card mb-4  mt-3 ">[m
[32m+[m[32m          <div class="card-body">[m
[32m+[m[41m            [m
[32m+[m[32m            <h3>پیام بگذارید...</h3>[m
[32m+[m[32m            <form method="POST" action="{% url 'comment_form' post.id  %}"  style="margin-top: 1.3em;">[m
[32m+[m[41m                [m
[32m+[m[32m                {% csrf_token %}[m
[32m+[m[32m                {{ form | crispy}}[m
[32m+[m[32m                <button type="submit" class="btn btn-primary  btn-lg">ارسال</button>[m
[32m+[m[32m            </form>[m
[32m+[m[41m           [m
[32m+[m[32m          </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m      </div>[m
[32m+[m[32m      </div>[m
[32m+[m[32m   </div>[m
[32m+[m[32m</div>[m
[32m+[m
[32m+[m[41m  [m
[32m+[m[32m{% endblock content %}[m
\ No newline at end of file[m
[1mdiff --git a/blog/templates/blog/post_list.html b/blog/templates/blog/post_list.html[m
[1mnew file mode 100644[m
[1mindex 0000000..b52cbe1[m
[1m--- /dev/null[m
[1m+++ b/blog/templates/blog/post_list.html[m
[36m@@ -0,0 +1,48 @@[m
[32m+[m[32m{% extends "blog/base.html" %}[m[41m [m
[32m+[m[32m{% block content %}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m<div class="container">[m
[32m+[m[32m    <div class="row">[m
[32m+[m[32m        <!-- Blog Entries Column -->[m
[32m+[m[32m        <div class="col-md-8 mt-3 left">[m
[32m+[m[32m            {% if posts %}[m
[32m+[m[41m              [m
[32m+[m[41m            [m
[32m+[m[32m                {% for post in posts %}[m
[32m+[m[32m                <div class="card mb-4">[m
[32m+[m[32m                    <div class="card-body">[m
[32m+[m[32m                        <h2 class="card-title">{{ post.title }}</h2>[m
[32m+[m[32m                        <p class="card-text text-muted h6">{{ post.author }} | {{ post.pub_date}} </p>[m
[32m+[m[32m                        <p class="card-text">{{post.article |slice:":200" }}</p>[m
[32m+[m[32m                        <a href="{% url 'detail1' post.id  %}" class="btn btn-primary">Read More &rarr;</a>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[32m                {% endfor %}[m
[32m+[m[32m            {% endif %}[m[41m    [m
[32m+[m[32m        </div>[m
[32m+[m[32m        {% block sidebar %} {% include 'blog/sidebar.html' %} {% endblock sidebar %}[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
[32m+[m[32m<div class="container">[m
[32m+[m[41m    [m
[32m+[m[41m       [m
[32m+[m[41m    [m
[32m+[m[41m    [m
[32m+[m
[32m+[m[32m      {% if page_obj.has_previous %}[m
[32m+[m[32m      <a class="" href="?page={{ page_obj.previous_page_number }}">قبلی</a>[m
[32m+[m[32m      {% endif %}[m
[32m+[m
[32m+[m[32m      <span class="current">[m
[32m+[m[32m          صفحه {{page_obj.number}} از {{page_obj.paginator.num_pages}}[m[41m [m
[32m+[m[32m      </span>[m
[32m+[m
[32m+[m[32m      {% if page_obj.has_next %}[m
[32m+[m[32m        <a class="" href="?page={{ page_obj.next_page_number }}">بعدی</a>[m
[32m+[m[32m      {% endif %}[m
[32m+[m[32m    </ul>[m[41m  [m
[32m+[m[32m</div>[m[41m      [m
[32m+[m
[32m+[m[32m{%endblock%}[m
\ No newline at end of file[m
[1mdiff --git a/blog/templates/blog/search.html b/blog/templates/blog/search.html[m
[1mnew file mode 100644[m
[1mindex 0000000..574ab6f[m
[1m--- /dev/null[m
[1m+++ b/blog/templates/blog/search.html[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32m<form method="get" action="{% url 'searchview' %}">[m
[32m+[m[32m    {% csrf_token %}[m
[32m+[m[32m        <input type="text" name = "a">[m
[32m+[m[32m        <input type="submit"value="Search"/>[m
[32m+[m[41m    [m
[32m+[m[32m</form>[m
\ No newline at end of file[m
[1mdiff --git a/blog/templates/blog/sidebar.html b/blog/templates/blog/sidebar.html[m
[1mnew file mode 100644[m
[1mindex 0000000..dde860d[m
[1m--- /dev/null[m
[1m+++ b/blog/templates/blog/sidebar.html[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32m{% block sidebar %}[m
[32m+[m
[32m+[m[32m<style>[m
[32m+[m[32m        .card{[m
[32m+[m[32m            box-shadow: 0 16px 48px #E3E7EB;[m
[32m+[m[32m        }[m
[32m+[m[41m       [m
[32m+[m[32m</style>[m
[32m+[m
[32m+[m[32m<!-- Sidebar Widgets Column -->[m
[32m+[m[32m<div class="col-md-4 float-right ">[m
[32m+[m[32m<div class="card my-4">[m
[32m+[m[32m        <h5 class="card-header">About Us</h5>[m
[32m+[m[32m    <div class="card-body">[m
[32m+[m[32m        <p class="card-text"> The sidebar is a graphical control element that displays various forms of information to the right or left side of an application window or operating system desktop. Wikipedia </p>[m
[32m+[m[32m        <a href="https://djangocentral.com/building-a-blog-application-with-django"[m
[32m+[m[32m           class="btn btn-danger">Read More</a>[m
[32m+[m[32m    </div>[m
[32m+[m[32m</div>[m
[32m+[m[32m</div>[m
[32m+[m
[32m+[m[32m{% endblock sidebar %}[m
\ No newline at end of file[m
[1mdiff --git a/blog/templates/blog/update.html b/blog/templates/blog/update.html[m
[1mnew file mode 100644[m
[1mindex 0000000..d65484a[m
[1m--- /dev/null[m
[1m+++ b/blog/templates/blog/update.html[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32m{% extends "blog/base.html" %}[m
[32m+[m[32m{% load crispy_forms_tags %}[m
[32m+[m[32m{% block content %}[m
[32m+[m[32m    <div class="container">[m[41m   [m
[32m+[m[32m        <div class="row">[m[41m  [m
[32m+[m[32m            <div class="col-xs-3 ">[m
[32m+[m[32m                <form method="post" >[m
[32m+[m[32m                    {% csrf_token %}[m
[32m+[m[32m                    {{form | crispy}}[m
[32m+[m[32m                    <button class="btn btn-primary" type="submit">Update</button>[m
[32m+[m[32m                </form>[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m    </div>[m
[32m+[m[32m{% endblock content %}[m
\ No newline at end of file[m
[1mdiff --git a/blog/tests.py b/blog/tests.py[m
[1mnew file mode 100644[m
[1mindex 0000000..7ce503c[m
[1m--- /dev/null[m
[1m+++ b/blog/tests.py[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32mfrom django.test import TestCase[m
[32m+[m
[32m+[m[32m# Create your tests here.[m
[1mdiff --git a/blog/urls.py b/blog/urls.py[m
[1mnew file mode 100644[m
[1mindex 0000000..7eb6988[m
[1m--- /dev/null[m
[1m+++ b/blog/urls.py[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32mfrom django.urls import path[m
[32m+[m[32mfrom blog.views import (post_create,post_list,Comment_Detail_View,[m
[32m+[m[32m                        Comment_Form_View,DeletePost,search,[m
[32m+[m[32m                        UpdatePost,Post_Comment_List,post_comment,Limited_PostDetail_User_View)[m
[32m+[m[32mfrom django.contrib.auth import views[m
[32m+[m[32mfrom django.views.generic import TemplateView[m
[32m+[m[32mfrom django.views.decorators.http import  require_POST[m
[32m+[m
[32m+[m[32murlpatterns = [[m
[32m+[m[32m    path('postcreate/', post_create.as_view(),name='post_create'),[m
[32m+[m[32m    path('', post_list.as_view(),name='post_list'),[m
[32m+[m[32m    path('postcomment/', Post_Comment_List.as_view(),name='post_comment_list'),[m
[32m+[m[32m    path('postcomment2/', post_comment.as_view(),name='post_comment'),[m
[32m+[m[32m    path('post/<int:pk>', Comment_Detail_View.as_view(), name='post_detail'),[m
[32m+[m[32m    path('delete/<int:pk>', DeletePost.as_view(), name='post_delete'),[m
[32m+[m[32m    path('update/<int:pk>', UpdatePost.as_view(), name='post_update'),[m
[32m+[m[32m    path('form/<int:pk>', require_POST(Comment_Form_View.as_view()), name='comment_form'),[m
[32m+[m[32m    path('post1/<int:pk>', Limited_PostDetail_User_View.as_view(), name='detail1'),[m
[32m+[m[32m    path('about/',TemplateView.as_view(template_name = 'blog/about.html'),name = 'about'),[m
[32m+[m[32m    path('search/',TemplateView.as_view(template_name = 'blog/search.html'),name = 'search'),[m
[32m+[m[32m    path('searchview',search,name='searchview'),[m
[32m+[m[41m [m
[32m+[m[32m][m
[32m+[m
[1mdiff --git a/blog/views.py b/blog/views.py[m
[1mnew file mode 100644[m
[1mindex 0000000..eac62db[m
[1m--- /dev/null[m
[1m+++ b/blog/views.py[m
[36m@@ -0,0 +1,148 @@[m
[32m+[m[32mfrom django.shortcuts import render,redirect,get_object_or_404[m
[32m+[m[32mfrom django.views.generic.edit import FormView[m
[32m+[m[32mfrom django.http import HttpResponse,HttpResponseForbidden,HttpResponseRedirect[m
[32m+[m[32mfrom django.views.generic import CreateView,ListView,DetailView,DeleteView,UpdateView[m
[32m+[m[32mfrom django.views.generic.detail import BaseDetailView[m
[32m+[m[32mfrom .models import Post,Comment[m
[32m+[m[32mfrom django.contrib.auth.mixins import LoginRequiredMixin[m
[32m+[m[32mfrom django.utils import timezone[m
[32m+[m[32mfrom django.urls import reverse[m
[32m+[m[32mfrom .form import commentform[m
[32m+[m[32mfrom django.contrib.auth.models import User[m
[32m+[m[32mfrom django.views.generic.edit import FormView[m
[32m+[m[32mfrom .form import commentform[m
[32m+[m[32mfrom django.views.generic.detail import SingleObjectMixin[m
[32m+[m[32mfrom django.views import View[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mclass UpdatePost(UpdateView,LoginRequiredMixin):[m
[32m+[m[32m    model = Post[m
[32m+[m[32m    template_name = "blog/update.html"[m
[32m+[m[32m    fields = ['title', 'article'][m
[32m+[m[32m    def get_success_url(self):[m
[32m+[m[32m        return reverse('post_detail', kwargs={'pk' : self.kwargs.get('pk')})[m
[32m+[m[32m    def get(self, request, *args, **kwargs):[m
[32m+[m[32m        self.object = self.get_object()[m
[32m+[m[32m        if request.user != self.object.author:[m
[32m+[m[32m            return HttpResponse('you can not see this page !')[m
[32m+[m[32m        return super().post(request, *args, **kwargs)[m
[32m+[m
[32m+[m
[32m+[m[32mclass DeletePost(DeleteView):[m
[32m+[m[32m    model = Post[m
[32m+[m[32m    template_name = "blog/post_detail.html"[m
[32m+[m[32m    success_url = '/'[m
[32m+[m[32m    def post(self, request, *args, **kwargs):[m
[32m+[m[32m        self.object = self.get_object()[m
[32m+[m[32m        if request.user != self.object.author:[m
[32m+[m[32m            return HttpResponse('you can not delete this post')[m
[32m+[m[32m        return super().post(request, *args, **kwargs)[m
[32m+[m
[32m+[m
[32m+[m[32mclass post_list(ListView):[m
[32m+[m[32m    model = Post[m
[32m+[m[32m    template_name='blog/post_list.html'[m
[32m+[m[32m    paginate_by = 2[m
[32m+[m[32m    def get_queryset(self):[m
[32m+[m[32m        self.post = Post.objects.filter(author = self.request.user)[m
[32m+[m[32m        return self.post[m
[32m+[m[32m    def get_context_data(self, **kwargs):[m
[32m+[m[32m        context = super().get_context_data(**kwargs)[m
[32m+[m[32m        context['posts'] = Post.objects.all()[m
[32m+[m[32m        return context[m
[32m+[m[41m    [m
[32m+[m
[32m+[m[32mclass post_create(LoginRequiredMixin,CreateView):[m
[32m+[m[32m    model = Post[m
[32m+[m[32m    fields = ['title', 'article'][m
[32m+[m[32m    template_name = 'blog/post_create.html'[m
[32m+[m[32m    success_url = '/'[m[41m [m
[32m+[m[32m    def form_valid(self, form):[m
[32m+[m[32m        form.instance.author = self.request.user[m
[32m+[m[32m        return super().form_valid(form)[m
[32m+[m
[32m+[m
[32m+[m[32m# def post_detail(request,pk):[m
[32m+[m[32m#     post = get_object_or_404(Post,pk=Post.objects.get(id=pk).id)[m
[32m+[m[32m#     comments = post.comments.all()[m
[32m+[m[32m#     template = 'blog/post_detail.html'[m
[32m+[m[32m#     new_comment = None[m
[32m+[m[32m#     user = User.objects.get(username=request.user).username[m
[32m+[m[32m#     if request.method == 'POST':[m
[32m+[m[32m#         comment_form = commentform(request.POST)[m
[32m+[m[32m#         if comment_form.is_valid() :[m[41m [m
[32m+[m[32m#             new_comment = comment_form.save(commit = False)[m
[32m+[m[32m#             new_comment.author = user[m
[32m+[m[32m#             new_comment.post = post[m[41m [m
[32m+[m[32m#             new_comment.save()[m
[32m+[m[32m#     else :[m[41m [m
[32m+[m[32m#         comment_form = commentform()[m
[32m+[m[32m#     return render(request ,'blog/post_detail.html', {'post':post , 'comments':comments ,[m
[32m+[m[32m#      'comment_form':comment_form , 'new_comment':new_comment,'user':user })[m
[32m+[m
[32m+[m
[32m+[m[32mclass Post_Comment_List(SingleObjectMixin, ListView):[m
[32m+[m[32m    template_name = 'blog/post_comment.html'[m
[32m+[m[32m    def get(self, request, *args, **kwargs):[m
[32m+[m[32m        self.object = self.get_object()[m
[32m+[m[32m        return self.object[m
[32m+[m[32m    def get_context_data(self, **kwargs):[m
[32m+[m[32m        context = super().get_context_data(**kwargs)[m
[32m+[m[32m        context['Post'] = self.object[m
[32m+[m[32m        return context[m[41m    [m
[32m+[m[32m    def get_queryset(self):[m
[32m+[m[32m        return Post.objects[m[41m [m
[32m+[m
[32m+[m[32mclass post_comment(ListView):[m
[32m+[m[32m    model = Comment[m
[32m+[m[32m    template_name = 'blog/post_comment.html'[m
[32m+[m[32m    def get_context_data(self, **kwargs):[m
[32m+[m[32m        context = super().get_context_data(**kwargs)[m
[32m+[m[32m        context['Post'] = Post.objects.all()[m
[32m+[m[32m        return context[m[41m  [m
[32m+[m
[32m+[m
[32m+[m[32mclass Comment_Detail_View(DetailView):[m
[32m+[m[32m    model = Post[m
[32m+[m[32m    template_name = "blog/post_detail.html"[m
[32m+[m
[32m+[m[32m    def get_context_data(self, **kwargs):[m
[32m+[m[32m        context = super().get_context_data(**kwargs)[m
[32m+[m[32m        context['form'] = commentform[m
[32m+[m[32m        context['comments'] = Comment.objects.filter(post_id=self.kwargs.get('pk'))[m
[32m+[m[32m        return context[m
[32m+[m
[32m+[m
[32m+[m[32mclass Limited_PostDetail_User_View(SingleObjectMixin,View):[m
[32m+[m[32m    model = Post[m
[32m+[m[32m    def get(self,request,*args,**kwargs):[m
[32m+[m[32m        self.object = self.get_object()[m
[32m+[m[32m        if  request.user != self.object.author :[m
[32m+[m[32m            return HttpResponseForbidden()[m[41m  [m
[32m+[m[32m        self.object = self.get_object()[m
[32m+[m[32m        return HttpResponseRedirect(reverse('post_detail',kwargs={'pk':self.object.pk}))[m[41m    [m
[32m+[m
[32m+[m
[32m+[m[32mclass Comment_Form_View(CreateView):[m
[32m+[m[32m    model = Comment[m
[32m+[m[32m    template_name = "blog/post_detail.html"[m
[32m+[m[32m    fields = ['massage'][m
[32m+[m[32m    def form_valid(self, form):[m
[32m+[m[32m        form.instance.author = self.request.user[m
[32m+[m[32m        form.instance.post = Post.objects.get(pk = self.kwargs.get('pk'))[m
[32m+[m[32m        return super().form_valid(form)[m
[32m+[m[32m    def get_success_url(self):[m
[32m+[m[32m        return reverse('post_detail', kwargs={'pk' : self.kwargs.get('pk')})[m
[32m+[m
[32m+[m[41m   [m
[32m+[m[32mdef search(request):[m
[32m+[m[32m    if request.GET.get('a') and request.GET.get('a') == 'abolfazl':[m
[32m+[m[32m        message = 'yes we have it'[m
[32m+[m[32m    else:[m
[32m+[m[32m        message = 'You submitted nothing!'[m
[32m+[m[32m    return HttpResponse(message)[m[41m    [m
[32m+[m
[32m+[m[41m    [m
[32m+[m
[32m+[m
[1mdiff --git a/db2.sqlite3 b/db2.sqlite3[m
[1mnew file mode 100644[m
[1mindex 0000000..1b54ab9[m
Binary files /dev/null and b/db2.sqlite3 differ
[1mdiff --git a/manage.py b/manage.py[m
[1mnew file mode 100644[m
[1mindex 0000000..1ed4085[m
[1m--- /dev/null[m
[1m+++ b/manage.py[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32m#!/usr/bin/env python[m
[32m+[m[32m"""Django's command-line utility for administrative tasks."""[m
[32m+[m[32mimport os[m
[32m+[m[32mimport sys[m
[32m+[m
[32m+[m
[32m+[m[32mdef main():[m
[32m+[m[32m    """Run administrative tasks."""[m
[32m+[m[32m    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'alamout.settings')[m
[32m+[m[32m    try:[m
[32m+[m[32m        from django.core.management import execute_from_command_line[m
[32m+[m[32m    except ImportError as exc:[m
[32m+[m[32m        raise ImportError([m
[32m+[m[32m            "Couldn't import Django. Are you sure it's installed and "[m
[32m+[m[32m            "available on your PYTHONPATH environment variable? Did you "[m
[32m+[m[32m            "forget to activate a virtual environment?"[m
[32m+[m[32m        ) from exc[m
[32m+[m[32m    execute_from_command_line(sys.argv)[m
[32m+[m
[32m+[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    main()[m
[1mdiff --git a/media/images/GFG-RT-DSA-SP-Viral1.png b/media/images/GFG-RT-DSA-SP-Viral1.png[m
[1mnew file mode 100644[m
[1mindex 0000000..8d3cfc6[m
Binary files /dev/null and b/media/images/GFG-RT-DSA-SP-Viral1.png differ
[1mdiff --git a/media/images/GFG-RT-DSA-SP-Viral1_nXk2xiZ.png b/media/images/GFG-RT-DSA-SP-Viral1_nXk2xiZ.png[m
[1mnew file mode 100644[m
[1mindex 0000000..8d3cfc6[m
Binary files /dev/null and b/media/images/GFG-RT-DSA-SP-Viral1_nXk2xiZ.png differ
[1mdiff --git a/static/css/simple-sidebar.css b/static/css/simple-sidebar.css[m
[1mnew file mode 100644[m
[1mindex 0000000..055888c[m
[1m--- /dev/null[m
[1m+++ b/static/css/simple-sidebar.css[m
[36m@@ -0,0 +1,50 @@[m
[32m+[m[32m/*![m
[32m+[m[32m * Start Bootstrap - Simple Sidebar (https://startbootstrap.com/templates/simple-sidebar)[m
[32m+[m[32m * Copyright 2013-2020 Start Bootstrap[m
[32m+[m[32m * Licensed under MIT (https://github.com/StartBootstrap/startbootstrap-simple-sidebar/blob/master/LICENSE)[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m #wrapper {[m
[32m+[m[32m    overflow-x: hidden;[m
[32m+[m[32m }[m
[32m+[m
[32m+[m[32m#sidebar-wrapper {[m
[32m+[m[32m  min-height: 100vh;[m
[32m+[m[32m  margin-left: -15rem;[m
[32m+[m[32m  -webkit-transition: margin .25s ease-out;[m
[32m+[m[32m  -moz-transition: margin .25s ease-out;[m
[32m+[m[32m  -o-transition: margin .25s ease-out;[m
[32m+[m[32m  transition: margin .25s ease-out;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m#sidebar-wrapper .sidebar-heading {[m
[32m+[m[32m  padding: 0.875rem 1.25rem;[m
[32m+[m[32m  font-size: 1.2rem;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m#sidebar-wrapper .list-group {[m
[32m+[m[32m  width: 15rem;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m#page-content-wrapper {[m
[32m+[m[32m  min-width: 100vw;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m#wrapper.toggled #sidebar-wrapper {[m
[32m+[m[32m  margin-left: 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m@media (min-width: 768px) {[m
[32m+[m[32m  #sidebar-wrapper {[m
[32m+[m[32m    margin-left: 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  #page-content-wrapper {[m
[32m+[m[32m    min-width: 0;[m
[32m+[m[32m    width: 100%;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  #wrapper.toggled #sidebar-wrapper {[m
[32m+[m[32m    margin-left: -15rem;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/static/vendor/bootstrap/css/bootstrap-grid.css b/static/vendor/bootstrap/css/bootstrap-grid.css[m
[1mnew file mode 100644[m
[1mindex 0000000..40ee85d[m
[1m--- /dev/null[m
[1m+++ b/static/vendor/bootstrap/css/bootstrap-grid.css[m
[36m@@ -0,0 +1,3904 @@[m
[32m+[m[32m/*![m
[32m+[m[32m * Bootstrap Grid v4.5.0 (https://getbootstrap.com/)[m
[32m+[m[32m * Copyright 2011-2020 The Bootstrap Authors[m
[32m+[m[32m * Copyright 2011-2020 Twitter, Inc.[m
[32m+[m[32m * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)[m
[32m+[m[32m */[m
[32m+[m[32mhtml {[m
[32m+[m[32m  box-sizing: border-box;[m
[32m+[m[32m  -ms-overflow-style: scrollbar;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m*,[m
[32m+[m[32m*::before,[m
[32m+[m[32m*::after {[m
[32m+[m[32m  box-sizing: inherit;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.container {[m
[32m+[m[32m  width: 100%;[m
[32m+[m[32m  padding-right: 15px;[m
[32m+[m[32m  padding-left: 15px;[m
[32m+[m[32m  margin-right: auto;[m
[32m+[m[32m  margin-left: auto;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m@media (min-width: 576px) {[m
[32m+[m[32m  .container {[m
[32m+[m[32m    max-width: 540px;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m@media (min-width: 768px) {[m
[32m+[m[32m  .container {[m
[32m+[m[32m    max-width: 720px;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m@media (min-width: 992px) {[m
[32m+[m[32m  .container {[m
[32m+[m[32m    max-width: 960px;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m@media (min-width: 1200px) {[m
[32m+[m[32m  .container {[m
[32m+[m[32m    max-width: 1140px;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.container-fluid, .container-sm, .container-md, .container-lg, .container-xl {[m
[32m+[m[32m  width: 100%;[m
[32m+[m[32m  padding-right: 15px;[m
[32m+[m[32m  padding-left: 15px;[m
[32m+[m[32m  margin-right: auto;[m
[32m+[m[32m  margin-left: auto;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m@media (min-width: 576px) {[m
[32m+[m[32m  .container, .container-sm {[m
[32m+[m[32m    max-width: 540px;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m@media (min-width: 768px) {[m
[32m+[m[32m  .container, .container-sm, .container-md {[m
[32m+[m[32m    max-width: 720px;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m@media (min-width: 992px) {[m
[32m+[m[32m  .container, .container-sm, .container-md, .container-lg {[m
[32m+[m[32m    max-width: 960px;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m@media (min-width: 1200px) {[m
[32m+[m[32m  .container, .container-sm, .container-md, .container-lg, .container-xl {[m
[32m+[m[32m    max-width: 1140px;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.row {[m
[32m+[m[32m  display: -ms-flexbox;[m
[32m+[m[32m  display: flex;[m
[32m+[m[32m  -ms-flex-wrap: wrap;[m
[32m+[m[32m  flex-wrap: wrap;[m
[32m+[m[32m  margin-right: -15px;[m
[32m+[m[32m  margin-left: -15px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.no-gutters {[m
[32m+[m[32m  margin-right: 0;[m
[32m+[m[32m  margin-left: 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.no-gutters > .col,[m
[32m+[m[32m.no-gutters > [class*="col-"] {[m
[32m+[m[32m  padding-right: 0;[m
[32m+[m[32m  padding-left: 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12, .col,[m
[32m+[m[32m.col-auto, .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm,[m
[32m+[m[32m.col-sm-auto, .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12, .col-md,[m
[32m+[m[32m.col-md-auto, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg,[m
[32m+[m[32m.col-lg-auto, .col-xl-1, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl,[m
[32m+[m[32m.col-xl-auto {[m
[32m+[m[32m  position: relative;[m
[32m+[m[32m  width: 100%;[m
[32m+[m[32m  padding-right: 15px;[m
[32m+[m[32m  padding-left: 15px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col {[m
[32m+[m[32m  -ms-flex-preferred-size: 0;[m
[32m+[m[32m  flex-basis: 0;[m
[32m+[m[32m  -ms-flex-positive: 1;[m
[32m+[m[32m  flex-grow: 1;[m
[32m+[m[32m  min-width: 0;[m
[32m+[m[32m  max-width: 100%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.row-cols-1 > * {[m
[32m+[m[32m  -ms-flex: 0 0 100%;[m
[32m+[m[32m  flex: 0 0 100%;[m
[32m+[m[32m  max-width: 100%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.row-cols-2 > * {[m
[32m+[m[32m  -ms-flex: 0 0 50%;[m
[32m+[m[32m  flex: 0 0 50%;[m
[32m+[m[32m  max-width: 50%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.row-cols-3 > * {[m
[32m+[m[32m  -ms-flex: 0 0 33.333333%;[m
[32m+[m[32m  flex: 0 0 33.333333%;[m
[32m+[m[32m  max-width: 33.333333%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.row-cols-4 > * {[m
[32m+[m[32m  -ms-flex: 0 0 25%;[m
[32m+[m[32m  flex: 0 0 25%;[m
[32m+[m[32m  max-width: 25%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.row-cols-5 > * {[m
[32m+[m[32m  -ms-flex: 0 0 20%;[m
[32m+[m[32m  flex: 0 0 20%;[m
[32m+[m[32m  max-width: 20%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.row-cols-6 > * {[m
[32m+[m[32m  -ms-flex: 0 0 16.666667%;[m
[32m+[m[32m  flex: 0 0 16.666667%;[m
[32m+[m[32m  max-width: 16.666667%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-auto {[m
[32m+[m[32m  -ms-flex: 0 0 auto;[m
[32m+[m[32m  flex: 0 0 auto;[m
[32m+[m[32m  width: auto;[m
[32m+[m[32m  max-width: 100%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-1 {[m
[32m+[m[32m  -ms-flex: 0 0 8.333333%;[m
[32m+[m[32m  flex: 0 0 8.333333%;[m
[32m+[m[32m  max-width: 8.333333%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-2 {[m
[32m+[m[32m  -ms-flex: 0 0 16.666667%;[m
[32m+[m[32m  flex: 0 0 16.666667%;[m
[32m+[m[32m  max-width: 16.666667%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-3 {[m
[32m+[m[32m  -ms-flex: 0 0 25%;[m
[32m+[m[32m  flex: 0 0 25%;[m
[32m+[m[32m  max-width: 25%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-4 {[m
[32m+[m[32m  -ms-flex: 0 0 33.333333%;[m
[32m+[m[32m  flex: 0 0 33.333333%;[m
[32m+[m[32m  max-width: 33.333333%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-5 {[m
[32m+[m[32m  -ms-flex: 0 0 41.666667%;[m
[32m+[m[32m  flex: 0 0 41.666667%;[m
[32m+[m[32m  max-width: 41.666667%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-6 {[m
[32m+[m[32m  -ms-flex: 0 0 50%;[m
[32m+[m[32m  flex: 0 0 50%;[m
[32m+[m[32m  max-width: 50%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-7 {[m
[32m+[m[32m  -ms-flex: 0 0 58.333333%;[m
[32m+[m[32m  flex: 0 0 58.333333%;[m
[32m+[m[32m  max-width: 58.333333%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-8 {[m
[32m+[m[32m  -ms-flex: 0 0 66.666667%;[m
[32m+[m[32m  flex: 0 0 66.666667%;[m
[32m+[m[32m  max-width: 66.666667%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-9 {[m
[32m+[m[32m  -ms-flex: 0 0 75%;[m
[32m+[m[32m  flex: 0 0 75%;[m
[32m+[m[32m  max-width: 75%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-10 {[m
[32m+[m[32m  -ms-flex: 0 0 83.333333%;[m
[32m+[m[32m  flex: 0 0 83.333333%;[m
[32m+[m[32m  max-width: 83.333333%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-11 {[m
[32m+[m[32m  -ms-flex: 0 0 91.666667%;[m
[32m+[m[32m  flex: 0 0 91.666667%;[m
[32m+[m[32m  max-width: 91.666667%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-12 {[m
[32m+[m[32m  -ms-flex: 0 0 100%;[m
[32m+[m[32m  flex: 0 0 100%;[m
[32m+[m[32m  max-width: 100%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.order-first {[m
[32m+[m[32m  -ms-flex-order: -1;[m
[32m+[m[32m  order: -1;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.order-last {[m
[32m+[m[32m  -ms-flex-order: 13;[m
[32m+[m[32m  order: 13;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.order-0 {[m
[32m+[m[32m  -ms-flex-order: 0;[m
[32m+[m[32m  order: 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.order-1 {[m
[32m+[m[32m  -ms-flex-order: 1;[m
[32m+[m[32m  order: 1;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.order-2 {[m
[32m+[m[32m  -ms-flex-order: 2;[m
[32m+[m[32m  order: 2;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.order-3 {[m
[32m+[m[32m  -ms-flex-order: 3;[m
[32m+[m[32m  order: 3;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.order-4 {[m
[32m+[m[32m  -ms-flex-order: 4;[m
[32m+[m[32m  order: 4;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.order-5 {[m
[32m+[m[32m  -ms-flex-order: 5;[m
[32m+[m[32m  order: 5;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.order-6 {[m
[32m+[m[32m  -ms-flex-order: 6;[m
[32m+[m[32m  order: 6;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.order-7 {[m
[32m+[m[32m  -ms-flex-order: 7;[m
[32m+[m[32m  order: 7;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.order-8 {[m
[32m+[m[32m  -ms-flex-order: 8;[m
[32m+[m[32m  order: 8;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.order-9 {[m
[32m+[m[32m  -ms-flex-order: 9;[m
[32m+[m[32m  order: 9;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.order-10 {[m
[32m+[m[32m  -ms-flex-order: 10;[m
[32m+[m[32m  order: 10;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.order-11 {[m
[32m+[m[32m  -ms-flex-order: 11;[m
[32m+[m[32m  order: 11;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.order-12 {[m
[32m+[m[32m  -ms-flex-order: 12;[m
[32m+[m[32m  order: 12;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.offset-1 {[m
[32m+[m[32m  margin-left: 8.333333%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.offset-2 {[m
[32m+[m[32m  margin-left: 16.666667%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.offset-3 {[m
